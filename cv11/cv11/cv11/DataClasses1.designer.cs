#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Tento kód byl generován nástrojem.
//     Verze modulu runtime:4.0.30319.42000
//
//     Změny tohoto souboru mohou způsobit nesprávné chování a budou ztraceny,
//     dojde-li k novému generování kódu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cv11
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabazeVyuka")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClasses(Classes instance);
    partial void UpdateClasses(Classes instance);
    partial void DeleteClasses(Classes instance);
    partial void InsertLessons(Lessons instance);
    partial void UpdateLessons(Lessons instance);
    partial void DeleteLessons(Lessons instance);
    partial void InsertGrades(Grades instance);
    partial void UpdateGrades(Grades instance);
    partial void DeleteGrades(Grades instance);
    partial void InsertStudents(Students instance);
    partial void UpdateStudents(Students instance);
    partial void DeleteStudents(Students instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::cv11.Properties.Settings.Default.DatabazeVyukaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Classes> Classes
		{
			get
			{
				return this.GetTable<Classes>();
			}
		}
		
		public System.Data.Linq.Table<Lessons> Lessons
		{
			get
			{
				return this.GetTable<Lessons>();
			}
		}
		
		public System.Data.Linq.Table<Grades> Grades
		{
			get
			{
				return this.GetTable<Grades>();
			}
		}
		
		public System.Data.Linq.Table<Students> Students
		{
			get
			{
				return this.GetTable<Students>();
			}
		}
		
		public System.Data.Linq.Table<ClassesView> ClassesView
		{
			get
			{
				return this.GetTable<ClassesView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classes")]
	public partial class Classes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _studentId;
		
		private int _lessonId;
		
		private EntityRef<Lessons> _Lessons;
		
		private EntityRef<Students> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OnlessonIdChanging(int value);
    partial void OnlessonIdChanged();
    #endregion
		
		public Classes()
		{
			this._Lessons = default(EntityRef<Lessons>);
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL")]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					if (this._Students.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lessonId", DbType="Int NOT NULL")]
		public int lessonId
		{
			get
			{
				return this._lessonId;
			}
			set
			{
				if ((this._lessonId != value))
				{
					if (this._Lessons.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlessonIdChanging(value);
					this.SendPropertyChanging();
					this._lessonId = value;
					this.SendPropertyChanged("lessonId");
					this.OnlessonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lessons_Classes", Storage="_Lessons", ThisKey="lessonId", OtherKey="Id", IsForeignKey=true)]
		public Lessons Lessons
		{
			get
			{
				return this._Lessons.Entity;
			}
			set
			{
				Lessons previousValue = this._Lessons.Entity;
				if (((previousValue != value) 
							|| (this._Lessons.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lessons.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Lessons.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._lessonId = value.Id;
					}
					else
					{
						this._lessonId = default(int);
					}
					this.SendPropertyChanged("Lessons");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_Classes", Storage="_Students", ThisKey="studentId", OtherKey="Id", IsForeignKey=true)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._studentId = value.Id;
					}
					else
					{
						this._studentId = default(int);
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lessons")]
	public partial class Lessons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _shortName;
		
		private EntitySet<Classes> _Classes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnshortNameChanging(string value);
    partial void OnshortNameChanged();
    #endregion
		
		public Lessons()
		{
			this._Classes = new EntitySet<Classes>(new Action<Classes>(this.attach_Classes), new Action<Classes>(this.detach_Classes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortName", DbType="NChar(10)")]
		public string shortName
		{
			get
			{
				return this._shortName;
			}
			set
			{
				if ((this._shortName != value))
				{
					this.OnshortNameChanging(value);
					this.SendPropertyChanging();
					this._shortName = value;
					this.SendPropertyChanged("shortName");
					this.OnshortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lessons_Classes", Storage="_Classes", ThisKey="Id", OtherKey="lessonId")]
		public EntitySet<Classes> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Classes entity)
		{
			this.SendPropertyChanging();
			entity.Lessons = this;
		}
		
		private void detach_Classes(Classes entity)
		{
			this.SendPropertyChanging();
			entity.Lessons = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grades")]
	public partial class Grades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _studentId;
		
		private string _shortName;
		
		private double _gradeValue;
		
		private System.DateTime _dateOfGrade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstudentIdChanging(int value);
    partial void OnstudentIdChanged();
    partial void OnshortNameChanging(string value);
    partial void OnshortNameChanged();
    partial void OngradeValueChanging(double value);
    partial void OngradeValueChanged();
    partial void OndateOfGradeChanging(System.DateTime value);
    partial void OndateOfGradeChanged();
    #endregion
		
		public Grades()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int studentId
		{
			get
			{
				return this._studentId;
			}
			set
			{
				if ((this._studentId != value))
				{
					this.OnstudentIdChanging(value);
					this.SendPropertyChanging();
					this._studentId = value;
					this.SendPropertyChanged("studentId");
					this.OnstudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortName", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string shortName
		{
			get
			{
				return this._shortName;
			}
			set
			{
				if ((this._shortName != value))
				{
					this.OnshortNameChanging(value);
					this.SendPropertyChanging();
					this._shortName = value;
					this.SendPropertyChanged("shortName");
					this.OnshortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gradeValue", DbType="Float NOT NULL")]
		public double gradeValue
		{
			get
			{
				return this._gradeValue;
			}
			set
			{
				if ((this._gradeValue != value))
				{
					this.OngradeValueChanging(value);
					this.SendPropertyChanging();
					this._gradeValue = value;
					this.SendPropertyChanged("gradeValue");
					this.OngradeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfGrade", DbType="Date NOT NULL")]
		public System.DateTime dateOfGrade
		{
			get
			{
				return this._dateOfGrade;
			}
			set
			{
				if ((this._dateOfGrade != value))
				{
					this.OndateOfGradeChanging(value);
					this.SendPropertyChanging();
					this._dateOfGrade = value;
					this.SendPropertyChanged("dateOfGrade");
					this.OndateOfGradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Students : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _surname;
		
		private System.DateTime _birthday;
		
		private EntitySet<Classes> _Classes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    #endregion
		
		public Students()
		{
			this._Classes = new EntitySet<Classes>(new Action<Classes>(this.attach_Classes), new Action<Classes>(this.detach_Classes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Students_Classes", Storage="_Classes", ThisKey="Id", OtherKey="studentId")]
		public EntitySet<Classes> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Classes entity)
		{
			this.SendPropertyChanging();
			entity.Students = this;
		}
		
		private void detach_Classes(Classes entity)
		{
			this.SendPropertyChanging();
			entity.Students = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassesView")]
	public partial class ClassesView
	{
		
		private int _lessonId;
		
		private System.Nullable<int> _StudentCount;
		
		private string _name;
		
		private string _shortName;
		
		public ClassesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lessonId", DbType="Int NOT NULL")]
		public int lessonId
		{
			get
			{
				return this._lessonId;
			}
			set
			{
				if ((this._lessonId != value))
				{
					this._lessonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentCount", DbType="Int")]
		public System.Nullable<int> StudentCount
		{
			get
			{
				return this._StudentCount;
			}
			set
			{
				if ((this._StudentCount != value))
				{
					this._StudentCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortName", DbType="NChar(10)")]
		public string shortName
		{
			get
			{
				return this._shortName;
			}
			set
			{
				if ((this._shortName != value))
				{
					this._shortName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
